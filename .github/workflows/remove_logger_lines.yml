name: Comment Out Logger Messages

on:
  push:
    branches:
      - main

jobs:
  comment_out_logger_messages:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Setup Git Config
      run: |
      
        # Setup the username and email.
        git config user.name "GitHub Actions Bot"
        git config user.email "<>"
          
    - name: Comment Out Logger Messages
      run: |
      
        # Find all Python files with the .py extension 
        files_to_modify=$(find . -type f -name "*.py")

        # Comment out occurrences of _logger.info/debug/warning/error("Message") with multi-line support
        for file in $files_to_modify; do
            awk '
                /_logger\./ {
                    if (!/^#/) {
                        print "# " $0
                        openParenCount = 0
                        lineOpenParenCount = gsub(/\(/, "", $0)
                        openParenCount += lineOpenParenCount
                        lineCloseParenCount = gsub(/\)/, "", $0)
                        openParenCount -= lineCloseParenCount
                        if (openParenCount == 0) {
                            commentBlock=0
                        } else {
                            commentBlock=1
                        }
                    } else {
                        print $0
                    }
                    next
                }
                commentBlock {
                    if (!/^#/) {
                        print "# " $0
                        lineOpenParenCount = gsub(/\(/, "", $0)
                        openParenCount += lineOpenParenCount
                        lineCloseParenCount = gsub(/\)/, "", $0)
                        openParenCount -= lineCloseParenCount
                        if (openParenCount == 0){
                          commentBlock=0
                        } else {
                          commentBlock=1
                        }
                    } else {
                        print $0
                    }  
                    next
                }
                { print }
            ' $file > temp_file && mv temp_file $file
        done
        # Check if there are changes
        if git diff --quiet; then
            echo "No changes in $files_to_modify. Nothing to commit."
        else
            # Stage the changes
            git add $files_to_modify

            # Commit the changes with a custom message
            git commit -m "Comment out Logger Messages"

            # Push the changes back to the repository
            git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}